# test with two different settings:
# - the default is to test with NLOPT and BAT
# - the second test is done without these two additional packages

# use Ubuntu 14.04
sudo: required
dist: trusty

cache:
  directories:
    - deps

language: cpp

# packages required in all cases
required_packages: &required_packages
  - git
  - dpkg-dev
  - make
  - g++
  - gcc
  - binutils
  - libx11-dev
  - libxpm-dev
  - libxft-dev
  - libxext-dev
  - gfortran
  - libssl-dev
  - libpcre3-dev
  - xlibmesa-glu-dev
  - libglew1.5-dev
  - libftgl-dev
  - libmysqlclient-dev
  - libfftw3-dev
  - cfitsio-dev
  - graphviz-dev
  - libavahi-compat-libdnssd-dev
  - libldap2-dev
  - python-dev
  - libxml2-dev
  - libkrb5-dev
  - libgsl0-dev
  - libqt4-dev
  - libboost-all-dev
  - libconfig++-dev
  - libyaml-cpp-dev

matrix:
    include:
      - env: TRAVIS_RPWA_USE_BAT=1
        addons:
            apt:
                packages:
                  - *required_packages
                  - libnlopt-dev
      - env: TRAVIS_RPWA_USE_BAT=0
        addons:
            apt:
                packages:
                  - *required_packages

# send mails if a build fails
notifications:
    email:
        recipients: rootpwa-push-notifications@lists.sourceforge.net
        on_success: change
        on_failure: always

before_install:
    - pyenv global system
    - pip install --user pylint==1.7.1 numpy
install:
    - ./travisCI/install-root.sh
    - . ${TRAVIS_BUILD_DIR}/deps/root/bin/thisroot.sh
    - if [ ${TRAVIS_RPWA_USE_BAT} -eq 1 ] ; then ./travisCI/install-bat.sh ; export BATINSTALLDIR=${TRAVIS_BUILD_DIR}/deps/bat ; export PATH=${BATINSTALLDIR}/bin:${PATH} ; fi
script:
    # exit immediately if an error is encountered
    - set -e
    - cd build
    - cmake ..
    # run 'make'
    - make
    # - if 'make' was successful, run 'make test'
    # - if 'make test' was not successful, print the log and fail the build
    - make test || (cat Testing/Temporary/LastTest.log && false)
    # - if 'make test' was successful, run 'testMC.sh'
    - cd ..
    # set some environment variables
    - export ROOTPWA=${PWD}
    - export LD_LIBRARY_PATH=${ROOTPWA}/build/lib:${LD_LIBRARY_PATH}
    - export PATH=${ROOTPWA}/build/bin:${PATH}
    - export PYTHONPATH=${ROOTPWA}/build/pyLib:${PYTHONPATH}
    - cd test
    - ./testMC.sh
